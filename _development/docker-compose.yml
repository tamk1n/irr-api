version: '3.8'

services:
  irr:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn --bind :8000 irr_api.wsgi:application --reload"
    # command: sh -c "python manage.py makemigrations && python manage.py migrate && python ./venv/lib/python3.10/site-packages/debugpy --wait-for-client --listen 0.0.0.0:3000 ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - ..:/usr/src/app/
      - logs_volume:/usr/src/app/logs/
      - media_volume:/usr/src/app/media/
    
    restart: always
    ports:
      - 8000:8000
      - 3000:3000
    env_file:
      - ../.env.dev
    depends_on:
      - db
  
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    restart: "always"
    env_file: ../.env.dev
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: sh -c "celery --app=irr_api worker -l INFO"
    restart: always
    volumes:
      - ..:/usr/src/app
    env_file: ../.env.dev
    depends_on:
      - redis
      - irr
  
  celery-beat:
    build: .
    command: sh -c "celery -A irr_api beat -l INFO"
    restart: always
    volumes:
      - ..:/usr/src/app
    env_file: ../.env.dev
    depends_on:
      - redis
      - irr
      - celery
  
  flower:
    build: .
    command: celery --app=irr_api flower
    restart: always
    volumes:
      - ..:/usr/src/app
    ports:
      - 5555:5555
    env_file: ../.env.dev
    depends_on:
      - redis
      - irr
      - celery

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=tamkin123
      - POSTGRES_DB=irr-api-db

volumes:
  postgres_data:
  logs_volume:
  media_volume:
  redis_data:
